name: Build
on:
  push:
    branches:
      - main

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get version
        id: get_version
        run: echo "version=$(grep "version" Cargo.toml | head -n1 | cut -d '"' -f2)" >> $GITHUB_OUTPUT
      - name: Compare version to NPM
        run: |
          NPM_VERSION=$(curl -s https://registry.npmjs.org/create-o7-app | jq -r '.["dist-tags"].latest')
          MY_VERSION=${{ steps.get_version.outputs.version }}
          if [ "$NPM_VERSION" == "$MY_VERSION" ]; then
            echo "NPM version is the same as the version in Cargo.toml, exiting"
            exit 1
          fi
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache Cargo
        id: cache-cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run Cargo Fetch
        if: steps.cache-cargo.outputs.cache-hit != 'true'
        run: cargo fetch

  build-linux:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: ./.github/actions
      - uses: ./.github/actions/build-linux

  build-macos:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: ./.github/actions
      - uses: ./.github/actions/build-macos
        with:
          target: x86_64
  
  build-macos-arm64:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: ./.github/actions
      - uses: ./.github/actions/build-macos
        with:
          target: aarch64

  build-windows:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: ./.github/actions
      - uses: ./.github/actions/build-windows
        with:
          target: x86_64
  
  build-windows-32:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: ./.github/actions
      - uses: ./.github/actions/build-windows
        with:
          target: i686

  release:
    needs: 
      - get-version
      - build-linux
      - build-macos
      - build-macos-arm64
      - build-windows
      - build-windows-32 
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Generate changelogs
        run: |
          # Full changelog
          pnpx git-cliff --tag ${{ needs.get-version.outputs.version }} -o CHANGELOG.md
          # Changelog for the release
          pnpx git-cliff --tag ${{ needs.get-version.outputs.version }} --unreleased --strip header -o CHANGELOG-release.md
      - name: Commit changelog
        run: |
          git add CHANGELOG.md
          git config --local user.email "create-o7-app@users.noreply.github.com"
          git config --local user.name "create-o7-app[bot]"
          git commit -m "ci: Update changelog for ${{ needs.get-version.outputs.version }}"
          git push
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: create-o7-app-*
          path: artifacts
          merge-multiple: true
      - name: Release Binaries
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG-release.md
          tag_name: ${{ needs.get-version.outputs.version }}
          files: artifacts/create-o7-app-*.tar.gz
      - name: Publish NPM Package
        run: |
          cd pkg
          cp ../README.md .
          jq '.version = "${{ needs.get-version.outputs.version }}"' package.json > tmp && mv tmp package.json
          npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
          npm publish
