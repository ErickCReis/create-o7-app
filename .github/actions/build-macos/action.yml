name: "Build MacOS"
description: "Build the MacOS binaries"

inputs:
  target:
    description: |
      'Target to build'
      'Options: x86_64, aarch64'
    required: true

runs:
  using: composite
  steps:
    - name: Check target
      shell: bash
      run: |
        if [ "${{ inputs.target }}" != "x86_64" ] && [ "${{ inputs.target }}" != "aarch64" ]; then
          echo "Invalid target"
          exit 1
        fi
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ inputs.target }}-apple-darwin
    - name: Cache Rust
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache OSXCross
      id: cache-osxcross
      uses: actions/cache@v4
      with:
        path: osxcross
        key: ${{ runner.os }}-osxcross-11.3
        save-always: true
    - name: Install OSXCross
      if: steps.cache-osxcross.outputs.cache-hit != 'true'
      shell: bash
      run: |
        git clone https://github.com/tpoechtrager/osxcross
        cd osxcross
        sudo tools/get_dependencies.sh
        wget -nc https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.3.sdk.tar.xz
        mv MacOSX11.3.sdk.tar.xz tarballs/
        UNATTENDED=yes OSX_VERSION_MIN=10.7 ./build.sh
    - name: Build MacOS
      shell: bash
      run: |
        export PATH="$(pwd)/osxcross/target/bin:$PATH"
        export LIBZ_SYS_STATIC=1
        export CC=o64-clang
        export CXX=o64-clang++
        cargo build --release --target "$TARGET-apple-darwin"
      env:
        TARGET: ${{ inputs.target }}
    - name: Compress Artifact
      shell: bash
      run: |
        mkdir -p compressed/artifacts
        if [ "$TARGET" == "x86_64" ]; then
          tar -czvf compressed/create-o7-app-macos.tar.gz -C target/x86_64-apple-darwin/release create-o7-app
        fi
        if [ "$TARGET" == "aarch64" ]; then
          tar -czvf compressed/create-o7-app-macos-arm64.tar.gz -C target/aarch64-apple-darwin/release create-o7-app
        fi
      env:
        TARGET: ${{ inputs.target }}
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: create-o7-app-macos-${{ inputs.target }}
        path: compressed/create-o7-app-*.tar.gz
